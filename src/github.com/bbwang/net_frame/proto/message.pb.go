// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

package com_kook_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 单人聊天请求
type SingleMsgRequest struct {
	Base     *BaseRequest `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	ToUid    uint64       `protobuf:"varint,2,opt,name=to_uid,json=toUid" json:"to_uid,omitempty"`
	CliMsgId uint64       `protobuf:"varint,3,opt,name=cli_msg_id,json=cliMsgId" json:"cli_msg_id,omitempty"`
	Msg      []byte       `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (m *SingleMsgRequest) Reset()                    { *m = SingleMsgRequest{} }
func (m *SingleMsgRequest) String() string            { return proto.CompactTextString(m) }
func (*SingleMsgRequest) ProtoMessage()               {}
func (*SingleMsgRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SingleMsgRequest) GetBase() *BaseRequest {
	if m != nil {
		return m.Base
	}
	return nil
}

type SingleMsgResult struct {
	Ret      *BaseResult `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"`
	CliMsgId uint64      `protobuf:"varint,2,opt,name=cli_msg_id,json=cliMsgId" json:"cli_msg_id,omitempty"`
	SrvMsgId uint64      `protobuf:"varint,3,opt,name=srv_msg_id,json=srvMsgId" json:"srv_msg_id,omitempty"`
}

func (m *SingleMsgResult) Reset()                    { *m = SingleMsgResult{} }
func (m *SingleMsgResult) String() string            { return proto.CompactTextString(m) }
func (*SingleMsgResult) ProtoMessage()               {}
func (*SingleMsgResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *SingleMsgResult) GetRet() *BaseResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

// 单人消息到达通知
type SingleMsgNotice struct {
	Base     *BaseRequest `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	SrvMsgId uint64       `protobuf:"varint,2,opt,name=srv_msg_id,json=srvMsgId" json:"srv_msg_id,omitempty"`
	FromUid  uint64       `protobuf:"varint,3,opt,name=from_uid,json=fromUid" json:"from_uid,omitempty"`
	ToUid    uint32       `protobuf:"varint,4,opt,name=to_uid,json=toUid" json:"to_uid,omitempty"`
}

func (m *SingleMsgNotice) Reset()                    { *m = SingleMsgNotice{} }
func (m *SingleMsgNotice) String() string            { return proto.CompactTextString(m) }
func (*SingleMsgNotice) ProtoMessage()               {}
func (*SingleMsgNotice) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *SingleMsgNotice) GetBase() *BaseRequest {
	if m != nil {
		return m.Base
	}
	return nil
}

// 同步单人消息
type SyncSingleMsgRequest struct {
	Base          *BaseRequest `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	FromUid       uint64       `protobuf:"varint,2,opt,name=from_uid,json=fromUid" json:"from_uid,omitempty"`
	SyncType      uint32       `protobuf:"varint,3,opt,name=sync_type,json=syncType" json:"sync_type,omitempty"`
	SrvMsgIdStart uint64       `protobuf:"varint,4,opt,name=srv_msg_id_start,json=srvMsgIdStart" json:"srv_msg_id_start,omitempty"`
	SrvMsgIdEnd   uint64       `protobuf:"varint,5,opt,name=srv_msg_id_end,json=srvMsgIdEnd" json:"srv_msg_id_end,omitempty"`
	Limit         uint32       `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
}

func (m *SyncSingleMsgRequest) Reset()                    { *m = SyncSingleMsgRequest{} }
func (m *SyncSingleMsgRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncSingleMsgRequest) ProtoMessage()               {}
func (*SyncSingleMsgRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *SyncSingleMsgRequest) GetBase() *BaseRequest {
	if m != nil {
		return m.Base
	}
	return nil
}

type SyncSingleMsgResult struct {
	Ret          *BaseResult `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"`
	SrvMaxMsgId  uint64      `protobuf:"varint,2,opt,name=srv_max_msg_id,json=srvMaxMsgId" json:"srv_max_msg_id,omitempty"`
	UnreadMsgNum uint32      `protobuf:"varint,3,opt,name=unread_msg_num,json=unreadMsgNum" json:"unread_msg_num,omitempty"`
	MsgList      []*MsgInfo  `protobuf:"bytes,4,rep,name=msg_list,json=msgList" json:"msg_list,omitempty"`
}

func (m *SyncSingleMsgResult) Reset()                    { *m = SyncSingleMsgResult{} }
func (m *SyncSingleMsgResult) String() string            { return proto.CompactTextString(m) }
func (*SyncSingleMsgResult) ProtoMessage()               {}
func (*SyncSingleMsgResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *SyncSingleMsgResult) GetRet() *BaseResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

func (m *SyncSingleMsgResult) GetMsgList() []*MsgInfo {
	if m != nil {
		return m.MsgList
	}
	return nil
}

// 拉取会话信息
type GetMsgSessionInfoRequest struct {
	Base  *BaseRequest `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Limit uint32       `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *GetMsgSessionInfoRequest) Reset()                    { *m = GetMsgSessionInfoRequest{} }
func (m *GetMsgSessionInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMsgSessionInfoRequest) ProtoMessage()               {}
func (*GetMsgSessionInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *GetMsgSessionInfoRequest) GetBase() *BaseRequest {
	if m != nil {
		return m.Base
	}
	return nil
}

type GetMsgSessionInfoResult struct {
	Ret            *BaseResult       `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"`
	MsgSessionInfo []*MsgSessionInfo `protobuf:"bytes,2,rep,name=msg_session_info,json=msgSessionInfo" json:"msg_session_info,omitempty"`
}

func (m *GetMsgSessionInfoResult) Reset()                    { *m = GetMsgSessionInfoResult{} }
func (m *GetMsgSessionInfoResult) String() string            { return proto.CompactTextString(m) }
func (*GetMsgSessionInfoResult) ProtoMessage()               {}
func (*GetMsgSessionInfoResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *GetMsgSessionInfoResult) GetRet() *BaseResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

func (m *GetMsgSessionInfoResult) GetMsgSessionInfo() []*MsgSessionInfo {
	if m != nil {
		return m.MsgSessionInfo
	}
	return nil
}

// 删除服务器的会话信息
type DelMsgSessionInfoRequest struct {
	Base    *BaseRequest `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	PeerUid uint32       `protobuf:"varint,2,opt,name=peer_uid,json=peerUid" json:"peer_uid,omitempty"`
	Uid     uint32       `protobuf:"varint,3,opt,name=uid" json:"uid,omitempty"`
}

func (m *DelMsgSessionInfoRequest) Reset()                    { *m = DelMsgSessionInfoRequest{} }
func (m *DelMsgSessionInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*DelMsgSessionInfoRequest) ProtoMessage()               {}
func (*DelMsgSessionInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *DelMsgSessionInfoRequest) GetBase() *BaseRequest {
	if m != nil {
		return m.Base
	}
	return nil
}

type DelMsgSessionInfoResult struct {
	Ret *BaseResult `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"`
}

func (m *DelMsgSessionInfoResult) Reset()                    { *m = DelMsgSessionInfoResult{} }
func (m *DelMsgSessionInfoResult) String() string            { return proto.CompactTextString(m) }
func (*DelMsgSessionInfoResult) ProtoMessage()               {}
func (*DelMsgSessionInfoResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *DelMsgSessionInfoResult) GetRet() *BaseResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

// 设置阅读状态，上报哪几条消息已读过。自己发送的消息就无需上报已读
type UpdateMsgReadStatusRequest struct {
	Base        *BaseRequest `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	FromUid     uint64       `protobuf:"varint,2,opt,name=from_uid,json=fromUid" json:"from_uid,omitempty"`
	FromGroupId uint32       `protobuf:"varint,3,opt,name=from_group_id,json=fromGroupId" json:"from_group_id,omitempty"`
	MsgType     uint32       `protobuf:"varint,4,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	SrvMsgId    []uint64     `protobuf:"varint,5,rep,packed,name=srv_msg_id,json=srvMsgId" json:"srv_msg_id,omitempty"`
}

func (m *UpdateMsgReadStatusRequest) Reset()                    { *m = UpdateMsgReadStatusRequest{} }
func (m *UpdateMsgReadStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateMsgReadStatusRequest) ProtoMessage()               {}
func (*UpdateMsgReadStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *UpdateMsgReadStatusRequest) GetBase() *BaseRequest {
	if m != nil {
		return m.Base
	}
	return nil
}

type UpdateMsgReadStatusResult struct {
	Ret *BaseResult `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"`
}

func (m *UpdateMsgReadStatusResult) Reset()                    { *m = UpdateMsgReadStatusResult{} }
func (m *UpdateMsgReadStatusResult) String() string            { return proto.CompactTextString(m) }
func (*UpdateMsgReadStatusResult) ProtoMessage()               {}
func (*UpdateMsgReadStatusResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *UpdateMsgReadStatusResult) GetRet() *BaseResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

// 获取我发出的消息被阅读情况，只会拉取我发的消息阅读状态
type GetMsgReadStatusRequest struct {
	Base      *BaseRequest `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	ToUid     uint64       `protobuf:"varint,2,opt,name=to_uid,json=toUid" json:"to_uid,omitempty"`
	ToGroupId uint32       `protobuf:"varint,3,opt,name=to_group_id,json=toGroupId" json:"to_group_id,omitempty"`
	MsgType   uint32       `protobuf:"varint,4,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	SrvMsgId  []uint64     `protobuf:"varint,5,rep,packed,name=srv_msg_id,json=srvMsgId" json:"srv_msg_id,omitempty"`
}

func (m *GetMsgReadStatusRequest) Reset()                    { *m = GetMsgReadStatusRequest{} }
func (m *GetMsgReadStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMsgReadStatusRequest) ProtoMessage()               {}
func (*GetMsgReadStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *GetMsgReadStatusRequest) GetBase() *BaseRequest {
	if m != nil {
		return m.Base
	}
	return nil
}

type GetMsgReadStatusResult struct {
	Ret       *BaseResult `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"`
	ToUid     uint64      `protobuf:"varint,2,opt,name=to_uid,json=toUid" json:"to_uid,omitempty"`
	ToGroupId uint32      `protobuf:"varint,3,opt,name=to_group_id,json=toGroupId" json:"to_group_id,omitempty"`
	MsgType   uint32      `protobuf:"varint,4,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	ReadUids  []uint64    `protobuf:"varint,5,rep,packed,name=read_uids,json=readUids" json:"read_uids,omitempty"`
}

func (m *GetMsgReadStatusResult) Reset()                    { *m = GetMsgReadStatusResult{} }
func (m *GetMsgReadStatusResult) String() string            { return proto.CompactTextString(m) }
func (*GetMsgReadStatusResult) ProtoMessage()               {}
func (*GetMsgReadStatusResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *GetMsgReadStatusResult) GetRet() *BaseResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

func init() {
	proto.RegisterType((*SingleMsgRequest)(nil), "com.kook.proto.SingleMsgRequest")
	proto.RegisterType((*SingleMsgResult)(nil), "com.kook.proto.SingleMsgResult")
	proto.RegisterType((*SingleMsgNotice)(nil), "com.kook.proto.SingleMsgNotice")
	proto.RegisterType((*SyncSingleMsgRequest)(nil), "com.kook.proto.SyncSingleMsgRequest")
	proto.RegisterType((*SyncSingleMsgResult)(nil), "com.kook.proto.SyncSingleMsgResult")
	proto.RegisterType((*GetMsgSessionInfoRequest)(nil), "com.kook.proto.GetMsgSessionInfoRequest")
	proto.RegisterType((*GetMsgSessionInfoResult)(nil), "com.kook.proto.GetMsgSessionInfoResult")
	proto.RegisterType((*DelMsgSessionInfoRequest)(nil), "com.kook.proto.DelMsgSessionInfoRequest")
	proto.RegisterType((*DelMsgSessionInfoResult)(nil), "com.kook.proto.DelMsgSessionInfoResult")
	proto.RegisterType((*UpdateMsgReadStatusRequest)(nil), "com.kook.proto.UpdateMsgReadStatusRequest")
	proto.RegisterType((*UpdateMsgReadStatusResult)(nil), "com.kook.proto.UpdateMsgReadStatusResult")
	proto.RegisterType((*GetMsgReadStatusRequest)(nil), "com.kook.proto.GetMsgReadStatusRequest")
	proto.RegisterType((*GetMsgReadStatusResult)(nil), "com.kook.proto.GetMsgReadStatusResult")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 612 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0xf3, 0xdf, 0x49, 0x1d, 0xa2, 0xa5, 0x10, 0x37, 0x45, 0x15, 0x32, 0x48, 0x70, 0x40,
	0x41, 0x2a, 0x6f, 0x80, 0x40, 0xa1, 0x12, 0x70, 0x70, 0xe8, 0xd9, 0x72, 0xe3, 0x6d, 0xb4, 0xaa,
	0xed, 0x0d, 0xde, 0x35, 0x4a, 0xc5, 0x1b, 0x70, 0x83, 0x77, 0xe1, 0xc2, 0x11, 0x89, 0x27, 0xe1,
	0x45, 0x98, 0x59, 0x27, 0xa9, 0x6d, 0xc2, 0xa1, 0x69, 0xb8, 0x65, 0x67, 0xc6, 0xfb, 0xfd, 0xcc,
	0xec, 0x04, 0xec, 0x98, 0x2b, 0x15, 0xcc, 0xf8, 0x68, 0x9e, 0x4a, 0x2d, 0x59, 0x6f, 0x2a, 0xe3,
	0xd1, 0xa5, 0x94, 0x97, 0xf9, 0x79, 0x08, 0xe7, 0x81, 0x5a, 0xe6, 0xdc, 0x2f, 0x16, 0xf4, 0x27,
	0x22, 0x99, 0x45, 0xfc, 0x9d, 0x9a, 0x79, 0xfc, 0x63, 0xc6, 0x95, 0x66, 0xcf, 0xa1, 0x41, 0x25,
	0x8e, 0xf5, 0xd0, 0x7a, 0xda, 0x3d, 0x39, 0x1a, 0x95, 0xbf, 0x1f, 0xbd, 0xc4, 0xdc, 0xb2, 0xd4,
	0x33, 0x85, 0xec, 0x1e, 0xb4, 0xb4, 0xf4, 0x33, 0x11, 0x3a, 0x35, 0xfc, 0xa4, 0xe1, 0x35, 0xb5,
	0x3c, 0x13, 0x21, 0x7b, 0x00, 0x30, 0x8d, 0x84, 0x1f, 0xab, 0x99, 0x8f, 0xa9, 0xba, 0x49, 0x75,
	0x30, 0x82, 0x50, 0xa7, 0x21, 0xeb, 0x43, 0x1d, 0x33, 0x4e, 0x03, 0xc3, 0xfb, 0x1e, 0xfd, 0x74,
	0x3f, 0xc3, 0x9d, 0x02, 0x17, 0x95, 0x45, 0x9a, 0x3d, 0x83, 0x7a, 0xca, 0xf5, 0x92, 0xc9, 0x70,
	0x33, 0x13, 0x2a, 0xf4, 0xa8, 0xac, 0x02, 0x58, 0xab, 0x00, 0x62, 0x56, 0xa5, 0x9f, 0x2a, 0x74,
	0x30, 0x62, 0xb2, 0xee, 0x37, 0xab, 0x80, 0xfe, 0x5e, 0x6a, 0x31, 0xe5, 0x37, 0x37, 0xa2, 0x0c,
	0x51, 0x2b, 0x43, 0xb0, 0x43, 0xe8, 0x5c, 0xa4, 0x32, 0x36, 0x46, 0xe5, 0xf0, 0x6d, 0x3a, 0x93,
	0x55, 0xd7, 0x0e, 0x92, 0x1f, 0xf6, 0xd2, 0x41, 0xf7, 0xb7, 0x05, 0x07, 0x93, 0xab, 0x64, 0x7a,
	0xfb, 0x16, 0x15, 0xb1, 0x6b, 0x65, 0xec, 0x23, 0xd8, 0x53, 0x88, 0xe1, 0xeb, 0xab, 0x39, 0x37,
	0xbc, 0x6c, 0xe4, 0x8c, 0x81, 0x0f, 0x78, 0x66, 0x4f, 0xa0, 0x7f, 0xad, 0xc8, 0x57, 0x3a, 0x48,
	0xb5, 0xa1, 0xd8, 0xf0, 0xec, 0x95, 0xae, 0x09, 0x05, 0xd9, 0x23, 0xe8, 0x15, 0x0a, 0x79, 0x12,
	0x3a, 0x4d, 0x53, 0xd6, 0x5d, 0x95, 0xbd, 0x4e, 0x42, 0x76, 0x00, 0xcd, 0x48, 0xc4, 0x42, 0x3b,
	0xad, 0x5c, 0xa5, 0x39, 0xb8, 0x3f, 0x2d, 0xb8, 0x5b, 0x51, 0xb9, 0x45, 0xf3, 0x57, 0x04, 0x82,
	0x45, 0xd9, 0x7f, 0x43, 0x20, 0x58, 0xe4, 0x2d, 0x78, 0x0c, 0xbd, 0x2c, 0x49, 0x79, 0x10, 0x9a,
	0x9a, 0x24, 0x8b, 0x97, 0x82, 0xf7, 0xf3, 0x28, 0xb5, 0x3e, 0x8b, 0xd9, 0x09, 0x74, 0x28, 0x1d,
	0x09, 0x45, 0x62, 0xeb, 0x88, 0x3e, 0xa8, 0xa2, 0xd3, 0x75, 0xc9, 0x85, 0xf4, 0xda, 0x58, 0xf8,
	0x16, 0xeb, 0xdc, 0x00, 0x9c, 0x31, 0xd7, 0x18, 0x9e, 0xe0, 0xe3, 0x13, 0x32, 0x31, 0xd9, 0x6d,
	0xbb, 0xb5, 0xf6, 0xa9, 0x56, 0xf4, 0xe9, 0xab, 0x05, 0x83, 0x0d, 0x18, 0x5b, 0x78, 0xf5, 0x06,
	0xfa, 0x24, 0x50, 0xe5, 0xd7, 0xf8, 0x02, 0xef, 0x41, 0x28, 0x12, 0x7a, 0xbc, 0x41, 0x68, 0x11,
	0xad, 0x17, 0x97, 0xce, 0xee, 0x02, 0x9c, 0x57, 0x3c, 0xda, 0x91, 0x6c, 0x1c, 0xd2, 0x39, 0xe7,
	0xe9, 0x7a, 0x48, 0x6d, 0xaf, 0x4d, 0x67, 0x1a, 0x52, 0xdc, 0x16, 0xab, 0x67, 0x63, 0x7b, 0xf4,
	0xd3, 0x1d, 0xc3, 0x60, 0x03, 0xf2, 0xcd, 0xcd, 0x70, 0x7f, 0x59, 0x30, 0x3c, 0x9b, 0x87, 0x81,
	0xce, 0x47, 0x2f, 0xa0, 0x81, 0xd6, 0x99, 0xfa, 0x1f, 0x4f, 0xcd, 0x05, 0xdb, 0xa4, 0x66, 0xa9,
	0xcc, 0xe6, 0xfe, 0x5a, 0x4f, 0x97, 0x82, 0x63, 0x8a, 0xe5, 0x5b, 0x82, 0x7a, 0x63, 0x5e, 0x63,
	0xbe, 0x0c, 0x68, 0xc6, 0xcc, 0x63, 0x2c, 0xaf, 0x97, 0x26, 0x36, 0xac, 0xb8, 0xc1, 0x4e, 0xe1,
	0x70, 0xa3, 0x8c, 0x2d, 0x2c, 0xf9, 0xb1, 0x9e, 0xb4, 0x1d, 0xf8, 0xf1, 0x8f, 0x7f, 0x87, 0x63,
	0xe8, 0x62, 0xb8, 0xe2, 0xc4, 0x9e, 0x96, 0xb7, 0xf6, 0xe1, 0xbb, 0x05, 0xf7, 0xff, 0x26, 0xbf,
	0xc5, 0x2b, 0xd9, 0x3d, 0x71, 0x5c, 0xb5, 0x66, 0xf9, 0xe0, 0x9d, 0x6a, 0xc5, 0x9b, 0x02, 0x78,
	0xad, 0x3a, 0x6f, 0x19, 0x16, 0x2f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x02, 0x84, 0xba, 0x2e,
	0xbf, 0x07, 0x00, 0x00,
}
